# -*- coding: utf-8 -*-
"""Data Processing

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1lWx1SJYygu0GTxqZunMz6S3ZykEP5Aua
"""

import scipy.io as sio
import matplotlib.pyplot as plt
import numpy as np

features = sio.loadmat('data_nozeroes.mat')
labels = sio.loadmat('landslideRisk.mat')

data_matrix = np.concatenate((labels['landslideRisk'], features['df']), axis=1)

data_matrix.shape

def sample_data_by_label(features, labels, buckets, samples_per_bucket):
    """
    Samples data points from a dataset based on label buckets.

    Args:
        features: A NumPy array of features.
        labels: A NumPy array of labels (continuous values).
        buckets: A list of tuples defining the label buckets (min, max).
        samples_per_bucket: The number of samples to take from each bucket.

    Returns:
        A tuple containing two NumPy arrays: sampled features and sampled labels.
    """
    sampled_features = []
    sampled_labels = []

    for min_val, max_val in buckets:
        indices = np.where((labels >= min_val) & (labels < max_val))[0]
        if len(indices) > 0:
            sampled_indices = np.random.choice(indices, size=min(samples_per_bucket, len(indices)), replace=False)
            sampled_features.extend(features[sampled_indices])
            sampled_labels.extend(labels[sampled_indices])

    return np.array(sampled_features), np.array(sampled_labels)


features_matrix = data_matrix[:, 1:]  # first column is the label
labels_matrix = data_matrix[:, 0]

buckets = [(0, 0.25), (0.25, 0.5), (0.5, 0.75), (0.75, 1.0)]  # buckets
samples_per_bucket = 100000  # number of samples per bucket

sampled_features, sampled_labels = sample_data_by_label(features_matrix, labels_matrix, buckets, samples_per_bucket)

print("Sampled Features shape:", sampled_features.shape)
print("Sampled Labels shape:", sampled_labels.shape)

sio.savemat('sampled_features.mat', {'new_matrix': sampled_features})
sio.savemat('sampled_labels.mat', {'new_matrix': sampled_labels})